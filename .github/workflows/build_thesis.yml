
name: Reproduce thesis

on:
  push:
    branches:
      - main

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      THESIS_DIR: ./thesis
      THESIS_FILE: thesis
      SLIDES_DIR: ./slides
      SLIDES_FILE: slides
      POSTER_DIR: ./poster
      POSTER_FILE: poster

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Set up TeX environment
        run: sudo apt-get update && sudo apt-get install texlive texlive-xetex texlive-publishers texlive-science texlive-fonts-extra cm-super dvipng

      - name: Generate matrices
        run: python setup/generate_matrices.py

      - name: Generate plots and tables
        run: python setup/generate_results.py

      - name: Obtain commit hash and time
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "build_time=$(date +'%Y-%m-%d at %H:%M:%S')" >> $GITHUB_ENV

      - name: Generate thesis
        run: |
          echo "built on ${{ env.build_time }} from \href{https://github.com/FMatti/Rand-SD/tree/${{ env.sha_short }}}{${{ env.sha_short }}}" > "${{ env.THESIS_DIR }}/re-pro-state.tex"
          python setup/generate_thesis.py
      
      - name: Generate slides
        run: |
          echo "built on ${{ env.build_time }} from \href{https://github.com/FMatti/Rand-SD/tree/${{ env.sha_short }}}{${{ env.sha_short }}}" > "${{ env.SLIDES_DIR }}/re-pro-state.tex"
          python setup/generate_slides.py
        
      - name: Generate poster
        run: |
          echo "built on ${{ env.build_time }} from \href{https://github.com/FMatti/Rand-SD/tree/${{ env.sha_short }}}{${{ env.sha_short }}}" > "${{ env.POSTER_DIR }}/re-pro-state.tex"
          python setup/generate_poster.py
    
      - name: Upload thesis as PDF artifact
        uses: actions/upload-artifact@v3
        with:
          name: outcomes
          path: |
            ${{ env.THESIS_DIR }}/${{ env.THESIS_FILE }}.pdf
            ${{ env.SLIDES_DIR }}/${{ env.SLIDES_FILE }}.pdf
            ${{ env.POSTER_DIR }}/${{ env.POSTER_FILE }}.pdf

      - name: Upload generated files to repository
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add thesis/plots/*.pgf thesis/tables/*.tex thesis/ thesis/re-pro-state.tex slides/re-pro-state.tex poster/re-pro-state.tex
          git commit -m "reproduce thesis"
          git push
